import yargs from "yargs";
import { hideBin } from "yargs/helpers";
import {
    provinces,
    fullNameAndProvincePromise,
    transferPaymentsFromWebPromise,
    transferPaymentForProvincePromise,
} from "./lab2_routines.js";
// Note: hideBin is a shorthand for process.argv.slice(2)
// - bypass the first two arguments
const argv = yargs(hideBin(process.argv))
    .options({
        fname: {
            demandOption: true,
            alias: "firstname",
            describe: "Resident's first name",
            string: true,
        },
        lname: {
            demandOption: true,
            alias: "lastname",
            describe: "Resident's last name",
            string: true,
        },
        prov: {
            demandOption: true,
            alias: "province",
            describe: "Resident's home province",
            choices: provinces.map((p) => p.code),
            string: true,
        },
    })
    .help()
    .alias("help", "h")
    .parse();
let messageTxt = "";
fullNameAndProvincePromise(argv.fname, argv.lname, argv.prov)
    .then((residentInfoTxt) => {
        messageTxt += residentInfoTxt;
        return transferPaymentsFromWebPromise();
    })
    .then((gocData) => {
        return transferPaymentForProvincePromise(gocData, argv.province);
    })
    .then((gocProvinceDataTxt) => {
        messageTxt += gocProvinceDataTxt;
        console.log(messageTxt);
    })
    .catch((err) => {
        console.log(`Error =>Â ${err}`);
    });














import got from "got";
const provinces = [
    { code: "NS", name: "Nova Scotia" },
    { code: "NL", name: "Newfoundland" },
    { code: "NB", name: "New Brunswick" },
    { code: "PE", name: "Prince Edward Island" },
    { code: "QC", name: "Quebec" },
    { code: "ON", name: "Ontario" },
    { code: "MB", name: "Manitoba" },
    { code: "SK", name: "Saskatchewan" },
    { code: "AB", name: "Alberta" },
    { code: "BC", name: "British Columbia" },
    { code: "NT", name: "North West Territories" },
    { code: "NU", name: "Nunavut" },
    { code: "YT", name: "Yukon Territory" },
];

const FISCALYEAR = "2022-2023";

// Create a currency formatter.
const currencyFormatter = (numberToFormat) =>
    new Intl.NumberFormat("en-US", {
        style: "currency",
        currency: "USD",
        minimumFractionDigits: 0,
    }).format(numberToFormat);

const fullNameAndProvincePromise = (fname, lname, provinceCode) => {
    return new Promise((resolve, reject) => {
        let provname = "error";
        provinces.forEach((prov) => {
            if (prov.code === provinceCode) {
                provname = prov.name;
            }
        });
        if (provname === "error") {
            reject(new Error("Province does not exisit"));
        } else {
            let txtMessage = `${fname}, ${lname} lives in ${provname}. `;
            resolve(txtMessage);
        }
    });
};

const transferPaymentsFromWebPromise = () => {
    let srcAddr =
        "http://www.infrastructure.gc.ca/alt-format/opendata/transfer-program-programmes-de-transfert-bil.json";
    return new Promise((resolve, reject) => {
        got(srcAddr, { responseType: "json" })
            .then((response) => {
                let data = response.body.ccbf;
                resolve(data);
            })
            .catch((err) => {
                console.log(`Error ==> ${err}`);
                reject(err);
            });
    });
};

const transferPaymentForProvincePromise = (gocData, provCode) => {
    return new Promise((resolve, reject) => {
        let provData = `It received ${currencyFormatter(
            gocData[`${provCode.toLowerCase()}`][`${FISCALYEAR}`]
        )} in transfer payments.`;
        resolve(provData);
    });
};

export {
    provinces,
    currencyFormatter,
    fullNameAndProvincePromise,
    transferPaymentsFromWebPromise,
    transferPaymentForProvincePromise,
};   